USE EDW;
SELECT DB_ID() AS DATABASE_ID,
  DB_NAME() AS DATABASE_NAME,
  SCHEMAS.NAME AS [SCHEMA_NAME],
  ALL_OBJECTS.NAME AS TABLE_NAME,
  (TBL_ST.RESERVED + ISNULL(TBL_PR.RESERVED, 0)) / 128.0 AS TABLE_SIZE_MB,
  TBL_ST.NO_ROWS AS ROW_COUNT,
  TBL_ST.DATA / 128.0 AS DATA_SIZE_MB,
  CASE
    WHEN (TBL_ST.USED + ISNULL(TBL_PR.USED, 0)) > TBL_ST.DATA 
	THEN (TBL_ST.USED + ISNULL(TBL_PR.USED, 0)) - TBL_ST.DATA
	ELSE 0
  END / 128.0 AS INDEX_SIZE_MB,
  CASE
    WHEN (TBL_ST.RESERVED + ISNULL(TBL_PR.RESERVED,0)) > TBL_ST.USED 
    THEN (TBL_ST.RESERVED + ISNULL(TBL_PR.RESERVED,0)) - TBL_ST.USED 
    ELSE 0 
  END / 128.0 AS FREE_MB
FROM (SELECT DM_DB_PARTITION_STATS.OBJECT_ID,
		SUM(CASE WHEN DM_DB_PARTITION_STATS.INDEX_ID < 2 THEN ROW_COUNT ELSE 0 END) AS NO_ROWS,
		SUM(DM_DB_PARTITION_STATS.RESERVED_PAGE_COUNT) AS RESERVED,
		SUM(CASE
			  WHEN DM_DB_PARTITION_STATS.INDEX_ID < 2
			  THEN DM_DB_PARTITION_STATS.IN_ROW_DATA_PAGE_COUNT + DM_DB_PARTITION_STATS.LOB_USED_PAGE_COUNT 
				   + DM_DB_PARTITION_STATS.ROW_OVERFLOW_USED_PAGE_COUNT
			  ELSE DM_DB_PARTITION_STATS.LOB_USED_PAGE_COUNT + DM_DB_PARTITION_STATS.ROW_OVERFLOW_USED_PAGE_COUNT
			END) AS DATA,
		SUM (DM_DB_PARTITION_STATS.USED_PAGE_COUNT) AS USED
      FROM SYS.DM_DB_PARTITION_STATS
      GROUP BY DM_DB_PARTITION_STATS.OBJECT_ID) AS TBL_ST
INNER JOIN SYS.ALL_OBJECTS
  ON TBL_ST.OBJECT_ID = ALL_OBJECTS.OBJECT_ID
INNER JOIN SYS.SCHEMAS
  ON ALL_OBJECTS.SCHEMA_ID = SCHEMAS.SCHEMA_ID
LEFT JOIN (SELECT INTERNAL_TABLES.PARENT_ID,
			 SUM(DM_DB_PARTITION_STATS.RESERVED_PAGE_COUNT) AS RESERVED,
			 SUM(DM_DB_PARTITION_STATS.USED_PAGE_COUNT) AS USED
           FROM SYS.DM_DB_PARTITION_STATS
           INNER JOIN SYS.INTERNAL_TABLES
		     ON INTERNAL_TABLES.OBJECT_ID = DM_DB_PARTITION_STATS.OBJECT_ID
           WHERE INTERNAL_TABLES.INTERNAL_TYPE IN (202, 204)
           GROUP BY INTERNAL_TABLES.PARENT_ID) AS TBL_PR
  ON TBL_PR.PARENT_ID = TBL_ST.OBJECT_ID
WHERE ALL_OBJECTS.TYPE NOT IN ('S', 'IT')
  -- AND ALL_OBJECTS.NAME IN ('SALES')
ORDER BY TBL_ST.RESERVED DESC
